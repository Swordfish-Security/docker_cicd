[
  {
    "Target": "bkimminich/juice-shop (alpine 3.9.4)",
    "Vulnerabilities": [
      {
        "VulnerabilityID": "CVE-2019-5436",
        "PkgName": "curl",
        "InstalledVersion": "7.64.0-r1",
        "FixedVersion": "7.64.0-r2",
        "Title": "curl: TFTP receive heap buffer overflow in tftp_receive_packet() function",
        "Description": "A heap buffer overflow in the TFTP receiving code allows for DoS or arbitrary code execution in libcurl versions 7.19.4 through 7.64.1.",
        "Severity": "MEDIUM",
        "References": [
          "https://security.netapp.com/advisory/ntap-20190606-0004/",
          "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-5436",
          "http://lists.opensuse.org/opensuse-security-announce/2019-06/msg00008.html",
          "http://lists.opensuse.org/opensuse-security-announce/2019-06/msg00017.html",
          "https://curl.haxx.se/docs/CVE-2019-5436.html",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SMG3V4VTX2SE3EW3HQTN3DDLQBTORQC2/"
        ]
      },
      {
        "VulnerabilityID": "CVE-2019-5435",
        "PkgName": "curl",
        "InstalledVersion": "7.64.0-r1",
        "FixedVersion": "7.64.0-r2",
        "Title": "curl: Integer overflows in curl_url_set() function",
        "Description": "An integer overflow in curl's URL API results in a buffer overflow in libcurl 7.62.0 to and including 7.64.1.",
        "Severity": "MEDIUM",
        "References": [
          "https://curl.haxx.se/docs/CVE-2019-5435.html",
          "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/SMG3V4VTX2SE3EW3HQTN3DDLQBTORQC2/",
          "https://security.netapp.com/advisory/ntap-20190606-0004/",
          "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-5435"
        ]
      },
      {
        "VulnerabilityID": "CVE-2019-8457",
        "PkgName": "sqlite",
        "InstalledVersion": "3.26.0-r3",
        "FixedVersion": "3.28.0-r0",
        "Title": "sqlite3: heap out-of-bound read in function rtreenode()",
        "Description": "SQLite3 from 3.6.0 to and including 3.27.2 is vulnerable to heap out-of-bound read in the rtreenode() function when handling invalid rtree tables.",
        "Severity": "HIGH",
        "References": [
          "https://www.sqlite.org/releaselog/3_28_0.html",
          "https://www.sqlite.org/src/info/90acdbfce9c08858",
          "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-8457",
          "https://security.netapp.com/advisory/ntap-20190606-0002/",
          "https://usn.ubuntu.com/4004-1/",
          "https://usn.ubuntu.com/4004-2/"
        ]
      },
      {
        "VulnerabilityID": "CVE-2019-5018",
        "PkgName": "sqlite",
        "InstalledVersion": "3.26.0-r3",
        "FixedVersion": "3.28.0-r0",
        "Title": "sqlite3: use-after-free in window function leading to remote code execution",
        "Description": "An exploitable use after free vulnerability exists in the window function functionality of Sqlite3 3.26.0. A specially crafted SQL command can cause a use after free vulnerability, potentially resulting in remote code execution. An attacker can send a malicious SQL command to trigger this vulnerability.",
        "Severity": "MEDIUM",
        "References": [
          "http://packetstormsecurity.com/files/152809/Sqlite3-Window-Function-Remote-Code-Execution.html",
          "http://www.securityfocus.com/bid/108294",
          "https://security.netapp.com/advisory/ntap-20190521-0001/",
          "https://talosintelligence.com/vulnerability_reports/TALOS-2019-0777",
          "\nhttps://www.talosintelligence.com/vulnerability_reports/TALOS-2019-0777\n    ",
          "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-5018"
        ]
      }
    ]
  },
  {
    "Target": "juice-shop/package-lock.json",
    "Vulnerabilities": [
      {
        "VulnerabilityID": "NSWG-ECO-428",
        "PkgName": "base64url",
        "InstalledVersion": "0.0.6",
        "FixedVersion": "\u003e=3.0.0",
        "Title": "Out-of-bounds Read",
        "Description": "`base64url` allocates uninitialized Buffers when number is passed in input on Node.js 4.x and below",
        "Severity": "HIGH",
        "References": [
          "https://hackerone.com/reports/321687",
          "https://github.com/brianloveswords/base64url/pull/25"
        ]
      },
      {
        "VulnerabilityID": "NSWG-ECO-17",
        "PkgName": "jsonwebtoken",
        "InstalledVersion": "0.1.0",
        "FixedVersion": "\u003e=4.2.2",
        "Title": "Verification Bypass",
        "Description": "It is possible for an attacker to bypass verification when \"a token digitally signed with an asymetric key (RS/ES family) of algorithms but instead the attacker send a token digitally signed with a symmetric algorithm (HS* family)\" [1]",
        "Severity": "HIGH",
        "References": [
          "https://github.com/auth0/node-jsonwebtoken/commit/1bb584bc382295eeb7ee8c4452a673a77a68b687",
          "https://www.timmclean.net/2015/02/25/jwt-alg-none.html",
          "https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/"
        ]
      },
      {
        "VulnerabilityID": "CVE-2016-1000223",
        "PkgName": "jws",
        "InstalledVersion": "0.2.6",
        "FixedVersion": "\u003e=3.0.0",
        "Title": "Forgeable Public/Private Tokens",
        "Description": "Since \"algorithm\" isn't enforced in `jws.verify()`, a malicious user could choose what algorithm is sent to the server. If the server is expecting RSA but is sent HMAC-SHA with RSA's public key, the server will think the public key is actually an HMAC private key. This could be used to forge any data an attacker wants.\n\nIn addition, there is the `none` algorithm to be concerned about.  In versions prior to 3.0.0, verification of the token could be bypassed when the `alg` field is set to `none`.\n\n*Edit ( 7/29/16 ): A previous version of this advisory incorrectly stated that the vulnerability was patched in version 2.0.0 instead of 3.0.0. The advisory has been updated to reflect this new information. Thanks to Fabien Catteau for reporting the error.*",
        "Severity": "HIGH",
        "References": [
          "https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/",
          "https://github.com/brianloveswords/node-jws/commit/585d0e1e97b6747c10cf5b7689ccc5618a89b299#diff-4ac32a78649ca5bdd8e0ba38b7006a1e"
        ]
      },
      {
        "VulnerabilityID": "CVE-2018-16487",
        "PkgName": "lodash",
        "InstalledVersion": "2.4.2",
        "FixedVersion": "\u003e=4.17.11",
        "Title": "lodash: Prototype pollution in utilities function",
        "Description": "A prototype pollution vulnerability was found in lodash \u003c4.17.11 where the functions merge, mergeWith, and defaultsDeep can be tricked into adding or modifying properties of Object.prototype.",
        "Severity": "HIGH",
        "References": [
          "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-16487",
          "https://hackerone.com/reports/380873",
          "\nhttps://hackerone.com/reports/380873\nhttps://www.npmjs.com/advisories/782\n    "
        ]
      },
      {
        "VulnerabilityID": "CVE-2018-3721",
        "PkgName": "lodash",
        "InstalledVersion": "2.4.2",
        "FixedVersion": "\u003e=4.17.5",
        "Title": "lodash: Prototype pollution in utilities function",
        "Description": "lodash node module before 4.17.5 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via defaultsDeep, merge, and mergeWith functions, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects.",
        "Severity": "MEDIUM",
        "References": [
          "https://github.com/lodash/lodash/commit/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a",
          "https://hackerone.com/reports/310443",
          "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-3721"
        ]
      },
      {
        "VulnerabilityID": "CVE-2016-4055",
        "PkgName": "moment",
        "InstalledVersion": "2.0.0",
        "FixedVersion": "\u003e=2.11.2",
        "Title": "moment.js: regular expression denial of service",
        "Description": "The duration function in the moment package before 2.11.2 for Node.js allows remote attackers to cause a denial of service (CPU consumption) via a long string, aka a \"regular expression Denial of Service (ReDoS).\"",
        "Severity": "HIGH",
        "References": [
          "https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS",
          "http://www.openwall.com/lists/oss-security/2016/04/20/11",
          "http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html",
          "http://www.securityfocus.com/bid/95849",
          "https://nodesecurity.io/advisories/55",
          "https://www.tenable.com/security/tns-2019-02",
          "\nhttps://nodesecurity.io/advisories/55\n    ",
          "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-4055"
        ]
      },
      {
        "VulnerabilityID": "CVE-2016-1000237",
        "PkgName": "sanitize-html",
        "InstalledVersion": "1.4.2",
        "FixedVersion": "\u003e=1.4.3",
        "Title": "XSS - Sanitization not applied recursively",
        "Description": "Sanitization of HTML strings is not applied recursively to input, allowing an attacker to potentially inject script and other markup.",
        "Severity": "MEDIUM",
        "References": [
          "https://github.com/punkave/sanitize-html/issues/29"
        ]
      },
      {
        "VulnerabilityID": "NSWG-ECO-154",
        "PkgName": "sanitize-html",
        "InstalledVersion": "1.4.2",
        "FixedVersion": "\u003e=1.11.4",
        "Title": "Cross Site Scripting",
        "Description": "Sanitize-html is a library for scrubbing html input of malicious values.\n\nVersions 1.11.1 and below are vulnerable to cross site scripting (XSS) in certain scenarios:\n\nIf allowed at least one nonTextTags, the result is a potential XSS vulnerability.\nPoC:\n\n```\nvar sanitizeHtml = require('sanitize-html');\n\nvar dirty = '!\u003ctextarea\u003e\u0026lt;/textarea\u0026gt;\u003csvg/onload=prompt`xs`\u0026gt;\u003c/textarea\u003e!';\nvar clean = sanitizeHtml(dirty, {\n    allowedTags: [ 'textarea' ]\n});\n\nconsole.log(clean);\n\n// !\u003ctextarea\u003e\u003c/textarea\u003e\u003csvg/onload=prompt`xs`\u003e\u003c/textarea\u003e!\n```",
        "Severity": "MEDIUM",
        "References": [
          "https://github.com/punkave/sanitize-html/issues/100",
          "https://github.com/punkave/sanitize-html/commit/5d205a1005ba0df80e21d8c64a15bb3accdb2403"
        ]
      },
      {
        "VulnerabilityID": "CVE-2015-8858",
        "PkgName": "uglify-js",
        "InstalledVersion": "2.2.5",
        "FixedVersion": "\u003e=2.6.0",
        "Title": "Regular Expression Denial of Service",
        "Description": "The uglify-js package before 2.6.0 for Node.js allows attackers to cause a denial of service (CPU consumption) via crafted input in a parse call, aka a \"regular expression denial of service (ReDoS).\"",
        "Severity": "HIGH",
        "References": [
          "http://www.openwall.com/lists/oss-security/2016/04/20/11",
          "http://www.securityfocus.com/bid/96409",
          "https://nodesecurity.io/advisories/48",
          "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-8858",
          "https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS"
        ]
      },
      {
        "VulnerabilityID": "CVE-2015-8857",
        "PkgName": "uglify-js",
        "InstalledVersion": "2.2.5",
        "FixedVersion": "\u003e= 2.4.24",
        "Title": "Incorrect Handling of Non-Boolean Comparisons During Minification",
        "Description": "The uglify-js package before 2.4.24 for Node.js does not properly account for non-boolean values when rewriting boolean expressions, which might allow attackers to bypass security mechanisms or possibly have unspecified other impact by leveraging improperly rewritten Javascript.",
        "Severity": "HIGH",
        "References": [
          "http://www.securityfocus.com/bid/96410",
          "https://nodesecurity.io/advisories/39",
          "https://zyan.scripts.mit.edu/blog/backdooring-js/",
          "https://github.com/mishoo/UglifyJS2/issues/751",
          "http://www.openwall.com/lists/oss-security/2016/04/20/11"
        ]
      }
    ]
  },
  {
    "Target": "juice-shop/frontend/package-lock.json",
    "Vulnerabilities": null
  }
]